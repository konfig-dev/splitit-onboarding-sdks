/*
 * Splitit.OnBoarding.Api.V2
 *
 * Splitit's Onboarding API
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://konfigthis.com
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Splitit.Onboarding.Net.Client;
using Splitit.Onboarding.Net.Api;
// uncomment below to import models
//using Splitit.Onboarding.Net.Model;

namespace Splitit.Onboarding.Net.Test.Api
{
    /// <summary>
    ///  Class for testing DataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Konfig (https://konfigthis.com).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DataApiTests : IDisposable
    {
        private DataApi instance;

        public DataApiTests()
        {
            instance = new DataApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DataApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DataApi
            //Assert.IsType<DataApi>(instance);
        }

        /// <summary>
        /// Test GetCountries
        /// </summary>
        [Fact]
        public void GetCountriesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCountries();
            //Assert.IsType<CountriesResponse>(response);
        }

        /// <summary>
        /// Test GetCurrencies
        /// </summary>
        [Fact]
        public void GetCurrenciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCurrencies();
            //Assert.IsType<CurrenciesResponse>(response);
        }

        /// <summary>
        /// Test GetProcessors
        /// </summary>
        [Fact]
        public void GetProcessorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetProcessors();
            //Assert.IsType<ProcessorsResponse>(response);
        }

        /// <summary>
        /// Test GetVerticals
        /// </summary>
        [Fact]
        public void GetVerticalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetVerticals();
            //Assert.IsType<MerchantVerticalsResponse>(response);
        }

        /// <summary>
        /// Test StatusLegend
        /// </summary>
        [Fact]
        public void StatusLegendTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.StatusLegend();
            //Assert.IsType<List<EnumDTO>>(response);
        }
    }
}
