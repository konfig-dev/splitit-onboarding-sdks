/*
Splitit.OnBoarding.Api.V2

Splitit's Onboarding API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// SelfOnBoardingErrorResponse struct for SelfOnBoardingErrorResponse
type SelfOnBoardingErrorResponse struct {
	Message *string `json:"message,omitempty"`
	ErrorCode *int32 `json:"errorCode,omitempty"`
	ParamName *string `json:"paramName,omitempty"`
	TraceId *string `json:"traceId,omitempty"`
}

// NewSelfOnBoardingErrorResponse instantiates a new SelfOnBoardingErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelfOnBoardingErrorResponse() *SelfOnBoardingErrorResponse {
	this := SelfOnBoardingErrorResponse{}
	return &this
}

// NewSelfOnBoardingErrorResponseWithDefaults instantiates a new SelfOnBoardingErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelfOnBoardingErrorResponseWithDefaults() *SelfOnBoardingErrorResponse {
	this := SelfOnBoardingErrorResponse{}
	return &this
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SelfOnBoardingErrorResponse) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfOnBoardingErrorResponse) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
    return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SelfOnBoardingErrorResponse) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SelfOnBoardingErrorResponse) SetMessage(v string) {
	o.Message = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *SelfOnBoardingErrorResponse) GetErrorCode() int32 {
	if o == nil || isNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfOnBoardingErrorResponse) GetErrorCodeOk() (*int32, bool) {
	if o == nil || isNil(o.ErrorCode) {
    return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *SelfOnBoardingErrorResponse) HasErrorCode() bool {
	if o != nil && !isNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *SelfOnBoardingErrorResponse) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetParamName returns the ParamName field value if set, zero value otherwise.
func (o *SelfOnBoardingErrorResponse) GetParamName() string {
	if o == nil || isNil(o.ParamName) {
		var ret string
		return ret
	}
	return *o.ParamName
}

// GetParamNameOk returns a tuple with the ParamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfOnBoardingErrorResponse) GetParamNameOk() (*string, bool) {
	if o == nil || isNil(o.ParamName) {
    return nil, false
	}
	return o.ParamName, true
}

// HasParamName returns a boolean if a field has been set.
func (o *SelfOnBoardingErrorResponse) HasParamName() bool {
	if o != nil && !isNil(o.ParamName) {
		return true
	}

	return false
}

// SetParamName gets a reference to the given string and assigns it to the ParamName field.
func (o *SelfOnBoardingErrorResponse) SetParamName(v string) {
	o.ParamName = &v
}

// GetTraceId returns the TraceId field value if set, zero value otherwise.
func (o *SelfOnBoardingErrorResponse) GetTraceId() string {
	if o == nil || isNil(o.TraceId) {
		var ret string
		return ret
	}
	return *o.TraceId
}

// GetTraceIdOk returns a tuple with the TraceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelfOnBoardingErrorResponse) GetTraceIdOk() (*string, bool) {
	if o == nil || isNil(o.TraceId) {
    return nil, false
	}
	return o.TraceId, true
}

// HasTraceId returns a boolean if a field has been set.
func (o *SelfOnBoardingErrorResponse) HasTraceId() bool {
	if o != nil && !isNil(o.TraceId) {
		return true
	}

	return false
}

// SetTraceId gets a reference to the given string and assigns it to the TraceId field.
func (o *SelfOnBoardingErrorResponse) SetTraceId(v string) {
	o.TraceId = &v
}

func (o SelfOnBoardingErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !isNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !isNil(o.ParamName) {
		toSerialize["paramName"] = o.ParamName
	}
	if !isNil(o.TraceId) {
		toSerialize["traceId"] = o.TraceId
	}
	return json.Marshal(toSerialize)
}

type NullableSelfOnBoardingErrorResponse struct {
	value *SelfOnBoardingErrorResponse
	isSet bool
}

func (v NullableSelfOnBoardingErrorResponse) Get() *SelfOnBoardingErrorResponse {
	return v.value
}

func (v *NullableSelfOnBoardingErrorResponse) Set(val *SelfOnBoardingErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSelfOnBoardingErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSelfOnBoardingErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelfOnBoardingErrorResponse(val *SelfOnBoardingErrorResponse) *NullableSelfOnBoardingErrorResponse {
	return &NullableSelfOnBoardingErrorResponse{value: val, isSet: true}
}

func (v NullableSelfOnBoardingErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelfOnBoardingErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


