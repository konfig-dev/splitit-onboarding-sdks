/*
Splitit.OnBoarding.Api.V2

Splitit's Onboarding API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// ProcessorAuthenticationParametersRequest struct for ProcessorAuthenticationParametersRequest
type ProcessorAuthenticationParametersRequest struct {
	Key string `json:"key"`
}

// NewProcessorAuthenticationParametersRequest instantiates a new ProcessorAuthenticationParametersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProcessorAuthenticationParametersRequest(key string) *ProcessorAuthenticationParametersRequest {
	this := ProcessorAuthenticationParametersRequest{}
	this.Key = key
	return &this
}

// NewProcessorAuthenticationParametersRequestWithDefaults instantiates a new ProcessorAuthenticationParametersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProcessorAuthenticationParametersRequestWithDefaults() *ProcessorAuthenticationParametersRequest {
	this := ProcessorAuthenticationParametersRequest{}
	return &this
}

// GetKey returns the Key field value
func (o *ProcessorAuthenticationParametersRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ProcessorAuthenticationParametersRequest) GetKeyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ProcessorAuthenticationParametersRequest) SetKey(v string) {
	o.Key = v
}

func (o ProcessorAuthenticationParametersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableProcessorAuthenticationParametersRequest struct {
	value *ProcessorAuthenticationParametersRequest
	isSet bool
}

func (v NullableProcessorAuthenticationParametersRequest) Get() *ProcessorAuthenticationParametersRequest {
	return v.value
}

func (v *NullableProcessorAuthenticationParametersRequest) Set(val *ProcessorAuthenticationParametersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProcessorAuthenticationParametersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProcessorAuthenticationParametersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProcessorAuthenticationParametersRequest(val *ProcessorAuthenticationParametersRequest) *NullableProcessorAuthenticationParametersRequest {
	return &NullableProcessorAuthenticationParametersRequest{value: val, isSet: true}
}

func (v NullableProcessorAuthenticationParametersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProcessorAuthenticationParametersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


