/*
Splitit.OnBoarding.Api.V2

Splitit's Onboarding API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// CreateMerchantResponse struct for CreateMerchantResponse
type CreateMerchantResponse struct {
	MerchantTempId string `json:"merchantTempId"`
	MerchantStatus string `json:"merchantStatus"`
}

// NewCreateMerchantResponse instantiates a new CreateMerchantResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMerchantResponse(merchantTempId string, merchantStatus string) *CreateMerchantResponse {
	this := CreateMerchantResponse{}
	this.MerchantTempId = merchantTempId
	this.MerchantStatus = merchantStatus
	return &this
}

// NewCreateMerchantResponseWithDefaults instantiates a new CreateMerchantResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMerchantResponseWithDefaults() *CreateMerchantResponse {
	this := CreateMerchantResponse{}
	return &this
}

// GetMerchantTempId returns the MerchantTempId field value
func (o *CreateMerchantResponse) GetMerchantTempId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantTempId
}

// GetMerchantTempIdOk returns a tuple with the MerchantTempId field value
// and a boolean to check if the value has been set.
func (o *CreateMerchantResponse) GetMerchantTempIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MerchantTempId, true
}

// SetMerchantTempId sets field value
func (o *CreateMerchantResponse) SetMerchantTempId(v string) {
	o.MerchantTempId = v
}

// GetMerchantStatus returns the MerchantStatus field value
func (o *CreateMerchantResponse) GetMerchantStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantStatus
}

// GetMerchantStatusOk returns a tuple with the MerchantStatus field value
// and a boolean to check if the value has been set.
func (o *CreateMerchantResponse) GetMerchantStatusOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MerchantStatus, true
}

// SetMerchantStatus sets field value
func (o *CreateMerchantResponse) SetMerchantStatus(v string) {
	o.MerchantStatus = v
}

func (o CreateMerchantResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["merchantTempId"] = o.MerchantTempId
	}
	if true {
		toSerialize["merchantStatus"] = o.MerchantStatus
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMerchantResponse struct {
	value *CreateMerchantResponse
	isSet bool
}

func (v NullableCreateMerchantResponse) Get() *CreateMerchantResponse {
	return v.value
}

func (v *NullableCreateMerchantResponse) Set(val *CreateMerchantResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMerchantResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMerchantResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMerchantResponse(val *CreateMerchantResponse) *NullableCreateMerchantResponse {
	return &NullableCreateMerchantResponse{value: val, isSet: true}
}

func (v NullableCreateMerchantResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMerchantResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


