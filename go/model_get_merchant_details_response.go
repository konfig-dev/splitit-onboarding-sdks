/*
Splitit.OnBoarding.Api.V2

Splitit's Onboarding API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// GetMerchantDetailsResponse struct for GetMerchantDetailsResponse
type GetMerchantDetailsResponse struct {
	PublicName string `json:"publicName"`
	LegalName string `json:"legalName"`
	PhoneNumber string `json:"phoneNumber"`
	MerchantTempId string `json:"merchantTempId"`
	Email string `json:"email"`
	MerchantStatus string `json:"merchantStatus"`
}

// NewGetMerchantDetailsResponse instantiates a new GetMerchantDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMerchantDetailsResponse(publicName string, legalName string, phoneNumber string, merchantTempId string, email string, merchantStatus string) *GetMerchantDetailsResponse {
	this := GetMerchantDetailsResponse{}
	this.PublicName = publicName
	this.LegalName = legalName
	this.PhoneNumber = phoneNumber
	this.MerchantTempId = merchantTempId
	this.Email = email
	this.MerchantStatus = merchantStatus
	return &this
}

// NewGetMerchantDetailsResponseWithDefaults instantiates a new GetMerchantDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMerchantDetailsResponseWithDefaults() *GetMerchantDetailsResponse {
	this := GetMerchantDetailsResponse{}
	return &this
}

// GetPublicName returns the PublicName field value
func (o *GetMerchantDetailsResponse) GetPublicName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicName
}

// GetPublicNameOk returns a tuple with the PublicName field value
// and a boolean to check if the value has been set.
func (o *GetMerchantDetailsResponse) GetPublicNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PublicName, true
}

// SetPublicName sets field value
func (o *GetMerchantDetailsResponse) SetPublicName(v string) {
	o.PublicName = v
}

// GetLegalName returns the LegalName field value
func (o *GetMerchantDetailsResponse) GetLegalName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LegalName
}

// GetLegalNameOk returns a tuple with the LegalName field value
// and a boolean to check if the value has been set.
func (o *GetMerchantDetailsResponse) GetLegalNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LegalName, true
}

// SetLegalName sets field value
func (o *GetMerchantDetailsResponse) SetLegalName(v string) {
	o.LegalName = v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *GetMerchantDetailsResponse) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *GetMerchantDetailsResponse) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *GetMerchantDetailsResponse) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetMerchantTempId returns the MerchantTempId field value
func (o *GetMerchantDetailsResponse) GetMerchantTempId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantTempId
}

// GetMerchantTempIdOk returns a tuple with the MerchantTempId field value
// and a boolean to check if the value has been set.
func (o *GetMerchantDetailsResponse) GetMerchantTempIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MerchantTempId, true
}

// SetMerchantTempId sets field value
func (o *GetMerchantDetailsResponse) SetMerchantTempId(v string) {
	o.MerchantTempId = v
}

// GetEmail returns the Email field value
func (o *GetMerchantDetailsResponse) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *GetMerchantDetailsResponse) GetEmailOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *GetMerchantDetailsResponse) SetEmail(v string) {
	o.Email = v
}

// GetMerchantStatus returns the MerchantStatus field value
func (o *GetMerchantDetailsResponse) GetMerchantStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantStatus
}

// GetMerchantStatusOk returns a tuple with the MerchantStatus field value
// and a boolean to check if the value has been set.
func (o *GetMerchantDetailsResponse) GetMerchantStatusOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MerchantStatus, true
}

// SetMerchantStatus sets field value
func (o *GetMerchantDetailsResponse) SetMerchantStatus(v string) {
	o.MerchantStatus = v
}

func (o GetMerchantDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["publicName"] = o.PublicName
	}
	if true {
		toSerialize["legalName"] = o.LegalName
	}
	if true {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if true {
		toSerialize["merchantTempId"] = o.MerchantTempId
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["merchantStatus"] = o.MerchantStatus
	}
	return json.Marshal(toSerialize)
}

type NullableGetMerchantDetailsResponse struct {
	value *GetMerchantDetailsResponse
	isSet bool
}

func (v NullableGetMerchantDetailsResponse) Get() *GetMerchantDetailsResponse {
	return v.value
}

func (v *NullableGetMerchantDetailsResponse) Set(val *GetMerchantDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMerchantDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMerchantDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMerchantDetailsResponse(val *GetMerchantDetailsResponse) *NullableGetMerchantDetailsResponse {
	return &NullableGetMerchantDetailsResponse{value: val, isSet: true}
}

func (v NullableGetMerchantDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMerchantDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


