/*
Splitit.OnBoarding.Api.V2

Testing DataApiService

*/

// Code generated by Konfig (https://konfigthis.com);

package splitit

import (
    "github.com/stretchr/testify/assert"
    "github.com/stretchr/testify/require"
    "testing"
    splitit "github.com/konfig-dev/splitit-onboarding-sdks/go"
)

func Test_splitit_DataApiService(t *testing.T) {

    configuration := splitit.NewConfiguration()
    
    
    apiClient := splitit.NewAPIClient(configuration)

    t.Run("Test DataApiService GetCountries", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.DataApi.GetCountries().Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test DataApiService GetCurrencies", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.DataApi.GetCurrencies().Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test DataApiService GetProcessors", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.DataApi.GetProcessors().Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test DataApiService GetVerticals", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.DataApi.GetVerticals().Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

    t.Run("Test DataApiService StatusLegend", func(t *testing.T) {

        t.Skip("skip test")  // remove to run test

        resp, httpRes, err := apiClient.DataApi.StatusLegend().Execute()

        require.Nil(t, err)
        require.NotNil(t, resp)
        assert.Equal(t, 200, httpRes.StatusCode)

    })

}
