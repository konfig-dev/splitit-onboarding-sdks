/*
Splitit.OnBoarding.Api.V2

Splitit's Onboarding API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// CreateMerchantRequest struct for CreateMerchantRequest
type CreateMerchantRequest struct {
	PublicName string `json:"publicName"`
	Email string `json:"email"`
	PhoneNumber string `json:"phoneNumber"`
	CountryIso2 string `json:"countryIso2"`
	LegalName string `json:"legalName"`
	CurrencyCode string `json:"currencyCode"`
	Tier *string `json:"tier,omitempty"`
	BusinessStreetAddress *string `json:"businessStreetAddress,omitempty"`
	BusinessCity *string `json:"businessCity,omitempty"`
	BusinessPostalCode *string `json:"businessPostalCode,omitempty"`
	BusinessCountry *string `json:"businessCountry,omitempty"`
	BusinessState *string `json:"businessState,omitempty"`
	Vertical *string `json:"vertical,omitempty"`
	SubVertical *string `json:"subVertical,omitempty"`
	NameOnBankAccount *string `json:"nameOnBankAccount,omitempty"`
	IncorporationCountry *string `json:"incorporationCountry,omitempty"`
	AccountNumber *string `json:"accountNumber,omitempty"`
	RoutingNumber *string `json:"routingNumber,omitempty"`
	TaxIdNumber *string `json:"taxIdNumber,omitempty"`
	TotalAnnualSales *string `json:"totalAnnualSales,omitempty"`
	PlatformName *string `json:"platformName,omitempty"`
}

// NewCreateMerchantRequest instantiates a new CreateMerchantRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMerchantRequest(publicName string, email string, phoneNumber string, countryIso2 string, legalName string, currencyCode string) *CreateMerchantRequest {
	this := CreateMerchantRequest{}
	this.PublicName = publicName
	this.Email = email
	this.PhoneNumber = phoneNumber
	this.CountryIso2 = countryIso2
	this.LegalName = legalName
	this.CurrencyCode = currencyCode
	return &this
}

// NewCreateMerchantRequestWithDefaults instantiates a new CreateMerchantRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMerchantRequestWithDefaults() *CreateMerchantRequest {
	this := CreateMerchantRequest{}
	return &this
}

// GetPublicName returns the PublicName field value
func (o *CreateMerchantRequest) GetPublicName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicName
}

// GetPublicNameOk returns a tuple with the PublicName field value
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetPublicNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PublicName, true
}

// SetPublicName sets field value
func (o *CreateMerchantRequest) SetPublicName(v string) {
	o.PublicName = v
}

// GetEmail returns the Email field value
func (o *CreateMerchantRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetEmailOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CreateMerchantRequest) SetEmail(v string) {
	o.Email = v
}

// GetPhoneNumber returns the PhoneNumber field value
func (o *CreateMerchantRequest) GetPhoneNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetPhoneNumberOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PhoneNumber, true
}

// SetPhoneNumber sets field value
func (o *CreateMerchantRequest) SetPhoneNumber(v string) {
	o.PhoneNumber = v
}

// GetCountryIso2 returns the CountryIso2 field value
func (o *CreateMerchantRequest) GetCountryIso2() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryIso2
}

// GetCountryIso2Ok returns a tuple with the CountryIso2 field value
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetCountryIso2Ok() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CountryIso2, true
}

// SetCountryIso2 sets field value
func (o *CreateMerchantRequest) SetCountryIso2(v string) {
	o.CountryIso2 = v
}

// GetLegalName returns the LegalName field value
func (o *CreateMerchantRequest) GetLegalName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LegalName
}

// GetLegalNameOk returns a tuple with the LegalName field value
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetLegalNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LegalName, true
}

// SetLegalName sets field value
func (o *CreateMerchantRequest) SetLegalName(v string) {
	o.LegalName = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *CreateMerchantRequest) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *CreateMerchantRequest) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetTier returns the Tier field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetTier() string {
	if o == nil || isNil(o.Tier) {
		var ret string
		return ret
	}
	return *o.Tier
}

// GetTierOk returns a tuple with the Tier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetTierOk() (*string, bool) {
	if o == nil || isNil(o.Tier) {
    return nil, false
	}
	return o.Tier, true
}

// HasTier returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasTier() bool {
	if o != nil && !isNil(o.Tier) {
		return true
	}

	return false
}

// SetTier gets a reference to the given string and assigns it to the Tier field.
func (o *CreateMerchantRequest) SetTier(v string) {
	o.Tier = &v
}

// GetBusinessStreetAddress returns the BusinessStreetAddress field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetBusinessStreetAddress() string {
	if o == nil || isNil(o.BusinessStreetAddress) {
		var ret string
		return ret
	}
	return *o.BusinessStreetAddress
}

// GetBusinessStreetAddressOk returns a tuple with the BusinessStreetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetBusinessStreetAddressOk() (*string, bool) {
	if o == nil || isNil(o.BusinessStreetAddress) {
    return nil, false
	}
	return o.BusinessStreetAddress, true
}

// HasBusinessStreetAddress returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasBusinessStreetAddress() bool {
	if o != nil && !isNil(o.BusinessStreetAddress) {
		return true
	}

	return false
}

// SetBusinessStreetAddress gets a reference to the given string and assigns it to the BusinessStreetAddress field.
func (o *CreateMerchantRequest) SetBusinessStreetAddress(v string) {
	o.BusinessStreetAddress = &v
}

// GetBusinessCity returns the BusinessCity field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetBusinessCity() string {
	if o == nil || isNil(o.BusinessCity) {
		var ret string
		return ret
	}
	return *o.BusinessCity
}

// GetBusinessCityOk returns a tuple with the BusinessCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetBusinessCityOk() (*string, bool) {
	if o == nil || isNil(o.BusinessCity) {
    return nil, false
	}
	return o.BusinessCity, true
}

// HasBusinessCity returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasBusinessCity() bool {
	if o != nil && !isNil(o.BusinessCity) {
		return true
	}

	return false
}

// SetBusinessCity gets a reference to the given string and assigns it to the BusinessCity field.
func (o *CreateMerchantRequest) SetBusinessCity(v string) {
	o.BusinessCity = &v
}

// GetBusinessPostalCode returns the BusinessPostalCode field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetBusinessPostalCode() string {
	if o == nil || isNil(o.BusinessPostalCode) {
		var ret string
		return ret
	}
	return *o.BusinessPostalCode
}

// GetBusinessPostalCodeOk returns a tuple with the BusinessPostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetBusinessPostalCodeOk() (*string, bool) {
	if o == nil || isNil(o.BusinessPostalCode) {
    return nil, false
	}
	return o.BusinessPostalCode, true
}

// HasBusinessPostalCode returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasBusinessPostalCode() bool {
	if o != nil && !isNil(o.BusinessPostalCode) {
		return true
	}

	return false
}

// SetBusinessPostalCode gets a reference to the given string and assigns it to the BusinessPostalCode field.
func (o *CreateMerchantRequest) SetBusinessPostalCode(v string) {
	o.BusinessPostalCode = &v
}

// GetBusinessCountry returns the BusinessCountry field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetBusinessCountry() string {
	if o == nil || isNil(o.BusinessCountry) {
		var ret string
		return ret
	}
	return *o.BusinessCountry
}

// GetBusinessCountryOk returns a tuple with the BusinessCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetBusinessCountryOk() (*string, bool) {
	if o == nil || isNil(o.BusinessCountry) {
    return nil, false
	}
	return o.BusinessCountry, true
}

// HasBusinessCountry returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasBusinessCountry() bool {
	if o != nil && !isNil(o.BusinessCountry) {
		return true
	}

	return false
}

// SetBusinessCountry gets a reference to the given string and assigns it to the BusinessCountry field.
func (o *CreateMerchantRequest) SetBusinessCountry(v string) {
	o.BusinessCountry = &v
}

// GetBusinessState returns the BusinessState field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetBusinessState() string {
	if o == nil || isNil(o.BusinessState) {
		var ret string
		return ret
	}
	return *o.BusinessState
}

// GetBusinessStateOk returns a tuple with the BusinessState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetBusinessStateOk() (*string, bool) {
	if o == nil || isNil(o.BusinessState) {
    return nil, false
	}
	return o.BusinessState, true
}

// HasBusinessState returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasBusinessState() bool {
	if o != nil && !isNil(o.BusinessState) {
		return true
	}

	return false
}

// SetBusinessState gets a reference to the given string and assigns it to the BusinessState field.
func (o *CreateMerchantRequest) SetBusinessState(v string) {
	o.BusinessState = &v
}

// GetVertical returns the Vertical field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetVertical() string {
	if o == nil || isNil(o.Vertical) {
		var ret string
		return ret
	}
	return *o.Vertical
}

// GetVerticalOk returns a tuple with the Vertical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetVerticalOk() (*string, bool) {
	if o == nil || isNil(o.Vertical) {
    return nil, false
	}
	return o.Vertical, true
}

// HasVertical returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasVertical() bool {
	if o != nil && !isNil(o.Vertical) {
		return true
	}

	return false
}

// SetVertical gets a reference to the given string and assigns it to the Vertical field.
func (o *CreateMerchantRequest) SetVertical(v string) {
	o.Vertical = &v
}

// GetSubVertical returns the SubVertical field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetSubVertical() string {
	if o == nil || isNil(o.SubVertical) {
		var ret string
		return ret
	}
	return *o.SubVertical
}

// GetSubVerticalOk returns a tuple with the SubVertical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetSubVerticalOk() (*string, bool) {
	if o == nil || isNil(o.SubVertical) {
    return nil, false
	}
	return o.SubVertical, true
}

// HasSubVertical returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasSubVertical() bool {
	if o != nil && !isNil(o.SubVertical) {
		return true
	}

	return false
}

// SetSubVertical gets a reference to the given string and assigns it to the SubVertical field.
func (o *CreateMerchantRequest) SetSubVertical(v string) {
	o.SubVertical = &v
}

// GetNameOnBankAccount returns the NameOnBankAccount field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetNameOnBankAccount() string {
	if o == nil || isNil(o.NameOnBankAccount) {
		var ret string
		return ret
	}
	return *o.NameOnBankAccount
}

// GetNameOnBankAccountOk returns a tuple with the NameOnBankAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetNameOnBankAccountOk() (*string, bool) {
	if o == nil || isNil(o.NameOnBankAccount) {
    return nil, false
	}
	return o.NameOnBankAccount, true
}

// HasNameOnBankAccount returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasNameOnBankAccount() bool {
	if o != nil && !isNil(o.NameOnBankAccount) {
		return true
	}

	return false
}

// SetNameOnBankAccount gets a reference to the given string and assigns it to the NameOnBankAccount field.
func (o *CreateMerchantRequest) SetNameOnBankAccount(v string) {
	o.NameOnBankAccount = &v
}

// GetIncorporationCountry returns the IncorporationCountry field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetIncorporationCountry() string {
	if o == nil || isNil(o.IncorporationCountry) {
		var ret string
		return ret
	}
	return *o.IncorporationCountry
}

// GetIncorporationCountryOk returns a tuple with the IncorporationCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetIncorporationCountryOk() (*string, bool) {
	if o == nil || isNil(o.IncorporationCountry) {
    return nil, false
	}
	return o.IncorporationCountry, true
}

// HasIncorporationCountry returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasIncorporationCountry() bool {
	if o != nil && !isNil(o.IncorporationCountry) {
		return true
	}

	return false
}

// SetIncorporationCountry gets a reference to the given string and assigns it to the IncorporationCountry field.
func (o *CreateMerchantRequest) SetIncorporationCountry(v string) {
	o.IncorporationCountry = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetAccountNumber() string {
	if o == nil || isNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetAccountNumberOk() (*string, bool) {
	if o == nil || isNil(o.AccountNumber) {
    return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasAccountNumber() bool {
	if o != nil && !isNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *CreateMerchantRequest) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetRoutingNumber returns the RoutingNumber field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetRoutingNumber() string {
	if o == nil || isNil(o.RoutingNumber) {
		var ret string
		return ret
	}
	return *o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetRoutingNumberOk() (*string, bool) {
	if o == nil || isNil(o.RoutingNumber) {
    return nil, false
	}
	return o.RoutingNumber, true
}

// HasRoutingNumber returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasRoutingNumber() bool {
	if o != nil && !isNil(o.RoutingNumber) {
		return true
	}

	return false
}

// SetRoutingNumber gets a reference to the given string and assigns it to the RoutingNumber field.
func (o *CreateMerchantRequest) SetRoutingNumber(v string) {
	o.RoutingNumber = &v
}

// GetTaxIdNumber returns the TaxIdNumber field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetTaxIdNumber() string {
	if o == nil || isNil(o.TaxIdNumber) {
		var ret string
		return ret
	}
	return *o.TaxIdNumber
}

// GetTaxIdNumberOk returns a tuple with the TaxIdNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetTaxIdNumberOk() (*string, bool) {
	if o == nil || isNil(o.TaxIdNumber) {
    return nil, false
	}
	return o.TaxIdNumber, true
}

// HasTaxIdNumber returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasTaxIdNumber() bool {
	if o != nil && !isNil(o.TaxIdNumber) {
		return true
	}

	return false
}

// SetTaxIdNumber gets a reference to the given string and assigns it to the TaxIdNumber field.
func (o *CreateMerchantRequest) SetTaxIdNumber(v string) {
	o.TaxIdNumber = &v
}

// GetTotalAnnualSales returns the TotalAnnualSales field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetTotalAnnualSales() string {
	if o == nil || isNil(o.TotalAnnualSales) {
		var ret string
		return ret
	}
	return *o.TotalAnnualSales
}

// GetTotalAnnualSalesOk returns a tuple with the TotalAnnualSales field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetTotalAnnualSalesOk() (*string, bool) {
	if o == nil || isNil(o.TotalAnnualSales) {
    return nil, false
	}
	return o.TotalAnnualSales, true
}

// HasTotalAnnualSales returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasTotalAnnualSales() bool {
	if o != nil && !isNil(o.TotalAnnualSales) {
		return true
	}

	return false
}

// SetTotalAnnualSales gets a reference to the given string and assigns it to the TotalAnnualSales field.
func (o *CreateMerchantRequest) SetTotalAnnualSales(v string) {
	o.TotalAnnualSales = &v
}

// GetPlatformName returns the PlatformName field value if set, zero value otherwise.
func (o *CreateMerchantRequest) GetPlatformName() string {
	if o == nil || isNil(o.PlatformName) {
		var ret string
		return ret
	}
	return *o.PlatformName
}

// GetPlatformNameOk returns a tuple with the PlatformName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMerchantRequest) GetPlatformNameOk() (*string, bool) {
	if o == nil || isNil(o.PlatformName) {
    return nil, false
	}
	return o.PlatformName, true
}

// HasPlatformName returns a boolean if a field has been set.
func (o *CreateMerchantRequest) HasPlatformName() bool {
	if o != nil && !isNil(o.PlatformName) {
		return true
	}

	return false
}

// SetPlatformName gets a reference to the given string and assigns it to the PlatformName field.
func (o *CreateMerchantRequest) SetPlatformName(v string) {
	o.PlatformName = &v
}

func (o CreateMerchantRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["publicName"] = o.PublicName
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if true {
		toSerialize["countryIso2"] = o.CountryIso2
	}
	if true {
		toSerialize["legalName"] = o.LegalName
	}
	if true {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !isNil(o.Tier) {
		toSerialize["tier"] = o.Tier
	}
	if !isNil(o.BusinessStreetAddress) {
		toSerialize["businessStreetAddress"] = o.BusinessStreetAddress
	}
	if !isNil(o.BusinessCity) {
		toSerialize["businessCity"] = o.BusinessCity
	}
	if !isNil(o.BusinessPostalCode) {
		toSerialize["businessPostalCode"] = o.BusinessPostalCode
	}
	if !isNil(o.BusinessCountry) {
		toSerialize["businessCountry"] = o.BusinessCountry
	}
	if !isNil(o.BusinessState) {
		toSerialize["businessState"] = o.BusinessState
	}
	if !isNil(o.Vertical) {
		toSerialize["vertical"] = o.Vertical
	}
	if !isNil(o.SubVertical) {
		toSerialize["subVertical"] = o.SubVertical
	}
	if !isNil(o.NameOnBankAccount) {
		toSerialize["nameOnBankAccount"] = o.NameOnBankAccount
	}
	if !isNil(o.IncorporationCountry) {
		toSerialize["incorporationCountry"] = o.IncorporationCountry
	}
	if !isNil(o.AccountNumber) {
		toSerialize["accountNumber"] = o.AccountNumber
	}
	if !isNil(o.RoutingNumber) {
		toSerialize["routingNumber"] = o.RoutingNumber
	}
	if !isNil(o.TaxIdNumber) {
		toSerialize["taxIdNumber"] = o.TaxIdNumber
	}
	if !isNil(o.TotalAnnualSales) {
		toSerialize["totalAnnualSales"] = o.TotalAnnualSales
	}
	if !isNil(o.PlatformName) {
		toSerialize["platformName"] = o.PlatformName
	}
	return json.Marshal(toSerialize)
}

type NullableCreateMerchantRequest struct {
	value *CreateMerchantRequest
	isSet bool
}

func (v NullableCreateMerchantRequest) Get() *CreateMerchantRequest {
	return v.value
}

func (v *NullableCreateMerchantRequest) Set(val *CreateMerchantRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMerchantRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMerchantRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMerchantRequest(val *CreateMerchantRequest) *NullableCreateMerchantRequest {
	return &NullableCreateMerchantRequest{value: val, isSet: true}
}

func (v NullableCreateMerchantRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMerchantRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


