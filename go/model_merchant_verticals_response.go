/*
Splitit.OnBoarding.Api.V2

Splitit's Onboarding API

API version: 1.0.0
*/

// Code generated by Konfig (https://konfigthis.com); DO NOT EDIT.

package splitit

import (
	"encoding/json"
)

// MerchantVerticalsResponse struct for MerchantVerticalsResponse
type MerchantVerticalsResponse struct {
	MerchantVerticals []MerchantVerticalResponse `json:"merchantVerticals"`
}

// NewMerchantVerticalsResponse instantiates a new MerchantVerticalsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMerchantVerticalsResponse(merchantVerticals []MerchantVerticalResponse) *MerchantVerticalsResponse {
	this := MerchantVerticalsResponse{}
	this.MerchantVerticals = merchantVerticals
	return &this
}

// NewMerchantVerticalsResponseWithDefaults instantiates a new MerchantVerticalsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMerchantVerticalsResponseWithDefaults() *MerchantVerticalsResponse {
	this := MerchantVerticalsResponse{}
	return &this
}

// GetMerchantVerticals returns the MerchantVerticals field value
func (o *MerchantVerticalsResponse) GetMerchantVerticals() []MerchantVerticalResponse {
	if o == nil {
		var ret []MerchantVerticalResponse
		return ret
	}

	return o.MerchantVerticals
}

// GetMerchantVerticalsOk returns a tuple with the MerchantVerticals field value
// and a boolean to check if the value has been set.
func (o *MerchantVerticalsResponse) GetMerchantVerticalsOk() ([]MerchantVerticalResponse, bool) {
	if o == nil {
    return nil, false
	}
	return o.MerchantVerticals, true
}

// SetMerchantVerticals sets field value
func (o *MerchantVerticalsResponse) SetMerchantVerticals(v []MerchantVerticalResponse) {
	o.MerchantVerticals = v
}

func (o MerchantVerticalsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["merchantVerticals"] = o.MerchantVerticals
	}
	return json.Marshal(toSerialize)
}

type NullableMerchantVerticalsResponse struct {
	value *MerchantVerticalsResponse
	isSet bool
}

func (v NullableMerchantVerticalsResponse) Get() *MerchantVerticalsResponse {
	return v.value
}

func (v *NullableMerchantVerticalsResponse) Set(val *MerchantVerticalsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMerchantVerticalsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMerchantVerticalsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMerchantVerticalsResponse(val *MerchantVerticalsResponse) *NullableMerchantVerticalsResponse {
	return &NullableMerchantVerticalsResponse{value: val, isSet: true}
}

func (v NullableMerchantVerticalsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMerchantVerticalsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


